##
This is an example program that highlights the
features of the Easy programming language. 

As you've likely guessed, mult-line comments start and end
with the double-pound sign; single-line comments start with
the pound sign and continue until the end of the line.

The entry point for Easy programs is the main block, of
which there can only be one. Outside of the main block, 
you can declare any number of functions in
any order.

Semicolons at the end of statements are optional.

Strings can begin with either a single or double quote

Running this tutorial will print the integers 1 through 11
##

main

	println('Tutorial output...')

	# 1. Simple println
	println(1);

	# 2. Simple literal
	Int x = 2;
	println(x);

	# 3. Simple expression
	x = 2*x - x + 1;
	println(3);

	# 4. Simple conditional statement
	if x equals 3
		x = 4;
	else if x equals 4
		println("How did we get here?");
		x = -1;
	else
		println("How did we POSSIBLY get here?");
		x = -1;
	end
	println(x);

	# 5. While loop
	Int i = 0;
	while i < 5
		i = i + 1;
	    x = i;
   	end
   	println(x);

   	# 6. For loop
   	for Int j from 1 to 6
   		x = j;
   	end
   	println(x);

   	# 7. Another For loop
   	for Int j from 1 to 7 by 2
   		x = j;
   	end
   	println(x);

	# 8. Infinite Loop
	i = 0
	loop
		if i equals 8
			println(i)
			break
		end
		i = i + 1
	end

	# 9. Until Loop
	i = 0 
	until i equals 9
		i = i + 1
	end
	println(i)

   	# 10. Simple function call (void)
   	print_10()

   	# 11. Simple function call (non-void)
   	Boolean isEven = even(10)
   	Int numToPrint = 11 if isEven else -1
	do println(numToPrint) if isEven else println("How?")

	println('Done')

end

##
Functions in Easy behave similarly to functions in C, in 
the sense that they are free-floating and not tied to a 
particular object (unlike methods). 
##

def print_10()
	println(10);
end

def even(num = Int) returns Boolean
	return num mod 2 equals 0;
end
